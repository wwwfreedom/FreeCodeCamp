@import 'base';

$sidebarWidth: 250px;

.mobileNavCommon {
  position: absolute;
  top: 0;
  right: 0;
  z-index: 5;
  background: rgba(0, 0, 0, 0.3);
  opacity: 0;
  -webkit-backface-visibility: hidden;
}

// .mobileNavClose {
//   composes: mobileNavCommon;
//   opacity: 0;
//   transition: all 0.5s;
//   display: none;
// }

.mobileNavOpen {
  composes: mobileNavCommon;
  opacity: 1;
  transition: opacity 1s ease;
  display: block;
  width: 100%;
  height: 100%;
  -webkit-backface-visibility: hidden;
}

// this creates an area to trigger the mobile nav off
.mobileNavOffTrigger {
  // to stop the flashing onto the menubar on ios
  position: absolute;
  top: $menuBarHeight;
  width: calc(100% - #{$sidebarWidth});
  // height: calc(100% - #{$menuBarHeight});
  height: 100%;
}
.menuClose {
  position: absolute;
  top: 0;
  right: 0;
  visibility: hidden;
  // setting the width and overflow hidden stop the div to take up space when they are close and stop the horizontal scrolling.
  width: 0;
  overflow: hidden;
  height: 100%;
  transition: all 0.5s cubic-bezier(0.685, 0.0473, 0.346, 1);
  transform: translate3d(100%, 0, 0);
  // to increase performance on mobile include -webkit-backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  opacity: 0;
}

.menuOpen {
  position: absolute;
  top: 0;
  right: 0;
  visibility: visible;
  width: $sidebarWidth;
  @include MQ(SM) {
    width: calc(75px + #{$sidebarWidth});
  }
  height: 100%;
  transition: all 0.5s cubic-bezier(0.685, 0.0473, 0.346, 1);
  transform: translate3d(0, 0, 0);
  -webkit-backface-visibility: hidden;
  opacity: 1;
}
.menuContent {
  display: flex;
  flex-direction: column;
  padding-top: 4em;
  padding-left: 1em;
  background: $mobNavBgColour;
  height: 100%;
  @include MQ(SM) {
    width: calc(75px + #{$sidebarWidth});
  }
  letter-spacing: 0.1em;
  a {
    // this is responsible for the line underneath the links
    box-shadow: 0 2px 0 rgba(0,0,0,.12);
    padding-top: 1.5em;
    padding-bottom: 0.5em;
    text-decoration: none;
    text-transform: uppercase;
    color: $link-color;
    @include MQ(SM) {
      @media only screen and (orientation: landscape) {
        font-size: 1em;
      }
      font-size: 1.5em;
      padding-top: 1em;
      padding-bottom: 0.3em;
    }
    &:hover {
      color: $dark-gray;
    }
  }
}

